[[{"l":"Swap API Documentation","p":["Welcome to the Swap API documentation! This guide provides detailed instructions on using our API for seamless token swaps. This documentation covers the /quote, /swap, /sources, and /aggregators endpoints, including their parameters, usage, and examples.","View the Swagger docs."]},{"l":"Table of Contents","p":["Overview","Endpoints","/quote","/swap","/sources","/aggregators","Query Parameters","Required Parameters","Optional Parameters","Example Requests","Error Handling","Contact and Support"]},{"l":"Overview","p":["The Swap API provides a set of endpoints to interact with various decentralized exchanges (DEXs) and protocols, enabling seamless token swaps. This documentation focuses on the /quote and /swap endpoints, which provide quotes and execution details for token swaps, respectively."]},{"l":"Endpoints"},{"i":"quote","l":"/quote","p":["amountIn(required): The amount of tokenIn tokens to swap (in base units).","chainId(required): The chain ID of the blockchain network.","Description: This endpoint provides a quote for a token swap, fetching the optimal route for the given parameters.","Endpoint: GET https://swap-api.xyz/quote","excludeAggregator(optional): Exclude specific aggregators.","excludeProtocols(optional): A comma-separated list of protocols to exclude.","fromTokenDecimals(optional): The decimal places for the tokenIn token.","includeAggregator(optional): Include specific aggregators.","includeProtocols(optional): A comma-separated list of protocols to include.","oneInchApiKey(optional): The api key for 1inch to fetch a quote.","Parameters:","recipient(required): The address that will receive the swapped tokens.","slippage(required): The maximum acceptable slippage percentage.","tokenIn(required): The ERC20 token address of the token you want to sell.","tokenOut(required): The ERC20 token address of the token you want to receive.","toTokenDecimals(optional): The decimal places for the tokenOut token.","zeroExApiKey(optional): The api key for 0x to fetch a quote"]},{"i":"swap","l":"/swap","p":["aggregator(path, required): The name of the aggregator to use for the swap. Example values include 1inch, paraswap, odos, etc.","amountIn(required): The amount of tokenIn to swap.","chainId(required): The ID of the blockchain network. Example: 1 for Ethereum mainnet.","Description: This endpoint provides the necessary data to execute a token swap using a specific aggregator. This endpoint retrieves the optimal swap route, including details such as the recipient address, the amount of gas required, and the data needed to perform the swap transaction.","Endpoint: GET https://swap-api.xyz/swap/[aggregator]","excludeProtocols(optional): Comma-separated list of protocols to exclude from the swap.","fromTokenDecimals(optional): Number of decimals for the input token.","includeProtocols(optional): Comma-separated list of protocols to include in the swap.","oneInchApiKey(optional): The api key required to generate calldata when calling /swap/1inch.","Parameters:","recipient(required): The address that will receive the tokens.","slippage(required): Acceptable slippage percentage. Example: 1.0 for 1%.","tokenIn(required): The address of the token to swap from.","tokenOut(required): The address of the token to swap to.","toTokenDecimals(optional): Number of decimals for the output token.","zeroExApiKey(optional): The api key required to generate calldata when calling /swap/0x"]},{"i":"sources","l":"/sources","p":["Endpoint: GET https://swap-api.xyz/sources/{chainId}","Description: This endpoint retrieves a list of available sources for a given blockchain network.","Parameters:","chainId(path, required): The ID of the blockchain network. Example: 1 for Ethereum mainnet."]},{"i":"aggregators","l":"/aggregators","p":["Endpoint: GET https://swap-api.xyz/aggregators/{chainId}","Description: This endpoint retrieves a list of available aggregators for a given blockchain network.","Parameters:","chainId(path, required): The ID of the blockchain network. Example: 1 for Ethereum mainnet."]},{"l":"Query Parameters"},{"l":"Required Parameters","p":["tokenIn(required): The ERC20 token address of the token you want to sell.","tokenOut(required): The ERC20 token address of the token you want to receive.","amountIn(required): The amount of tokenIn tokens to swap (in base units).","slippage(required): The maximum acceptable slippage percentage.","chainId(required): The chain ID of the blockchain network.","recipient(required): The address that will receive the swapped tokens."]},{"l":"Optional Parameters","p":["includeProtocols: A comma-separated list of protocols to include.","excludeProtocols: A comma-separated list of protocols to exclude.","fromTokenDecimals: The decimal places for the tokenIn token.","toTokenDecimals: The decimal places for the tokenOut token.","includeAggregator: Include specific aggregators.","excludeAggregator: Exclude specific aggregators."]},{"l":"Example Requests"},{"i":"example-1-basic-request","l":"Example 1: Basic Request","p":["Request:","Response:"]},{"i":"example-2-including-specific-protocols","l":"Example 2: Including Specific Protocols","p":["Request:","Response:"]},{"i":"example-3-excluding-specific-protocols","l":"Example 3: Excluding Specific Protocols","p":["Request:","Response:"]},{"l":"Error Handling","p":["The Swap API uses standard HTTP status codes to indicate the success or failure of an API request. Here are the most common status codes you may encounter:","200 OK: The request was successful.","400 Bad Request: The request was invalid. Check the error message for details.","401 Unauthorized: Authentication failed. Verify your API key.","500 Internal Server Error: An error occurred on the server. Try again later."]},{"l":"Example Error Response"},{"i":"example-requests-1","l":"Example Requests"},{"i":"example-1-basic-swap-request","l":"Example 1: Basic Swap Request","p":["Request:","Response:"]},{"i":"example-2-swap-request-with-included-protocols","l":"Example 2: Swap Request with Included Protocols","p":["Request:","Response:"]},{"i":"sources-1","l":"/sources"},{"l":"Example Request","p":["Request:","Response:"]},{"i":"aggregators-1","l":"/aggregators"},{"i":"example-request-1","l":"Example Request","p":["Request:","Response:"]},{"l":"Contact and Support","p":["For any issues, questions, or support, please reach out to our support team on Telegram."]}],[{"l":"Getting Started","p":["The Meta-aggregator Swap API is an available as a Quicknode add-on in their Marketplace. These documents serve as a guide to get your endpoints configured properly to make the integration as seamless as possible","Overview","Endpoints","/quote","/swap","/aggregators","/sources"]}],[{"i":"post-quote","l":"POST /quote","p":["/quote requests should be called via the Quicknode endpoint you used to configure on each chain. Parameters are passed in via JSON."]},{"l":"Required Parameters","p":["\"0x92977D2552f455Bb9A3457AEbfCb78f1256Dd2e5\"","\"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"","\"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\"","\"1000000000000000000\"","1","amountIn","chainId","Example","Notes","Parameter","recipient","slippage","The address that will receive the swapped tokens.","The amount of tokenIn tokens to swap (in base units).","The chain ID of the blockchain network.","The ERC20 token address of the token you want to receive.","The ERC20 token address of the token you want to sell.","The maximum acceptable slippage percentage.","tokenIn","tokenOut"]},{"l":"Optional Parameters","p":["\"1inch\"","\"paraswap\"","\"uniswap-v2,sushiswap\"","\"uniswap-v3\"","\"YOUR_0X_API_KEY\"","\"YOUR_1INCH_API_KEY\"","18","6","A comma-separated list of protocols to exclude.","A comma-separated list of protocols to include.","Example","Exclude specific aggregators.","excludeAggregator","excludeProtocols","fromTokenDecimals","Include specific aggregators.","includeAggregator","includeProtocols","Notes","oneInchApiKey","Parameter","The API key for 0x to fetch a quote.","The API key for 1inch to fetch a quote.","The decimal places for the tokenIn token.","The decimal places for the tokenOut token.","toTokenDecimals","zeroExApiKey"]},{"i":"premium-optional-parameters","l":"Premium (optional) Parameters","p":["Parameter","Notes","Example","odosReferralCode","Referral code for Odos. Obtain a code here","\"12345678\"","partnerReferralWallet","Wallet address for partner referral (premium only).","\"0x92977D2552f455Bb9A3457AEbfCb78f1256Dd2e5\"","partnerReferralFeeBps","Fee in basis points for partner referral (premium only).","50"]},{"i":"example","l":"Example:"},{"l":"Request"},{"l":"Response","p":["Calling the /quote endpoint with your desired parameters automatically standardizes and passes your parameters to several DEX aggregators and returns a response based on values from their native API. The body.best collection populates based on which aggregator provides the most favorable value on the trade. Additionally body.best.aggregator can then be used in the /swap endpoint to generate calldata","Additionally, you can filter out requests from specific aggregators via the excludeAggregator parameter, or specifically only include aggregators via includeAggregators"]}],[{"i":"post-swapaggregator","l":"POST /swap/[aggregator]","p":["/swap/[aggregator] requests should be called via the Quicknode endpoint you used to configure on each chain. Parameters are passed in via JSON."]},{"l":"Required Parameters","p":["\"0x92977D2552f455Bb9A3457AEbfCb78f1256Dd2e5\"","\"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"","\"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\"","\"1000000000000000000\"","1","amountIn","chainId","Example","Notes","Parameter","recipient","slippage","The address that will receive the swapped tokens.","The amount of tokenIn tokens to swap (in base units).","The chain ID of the blockchain network.","The ERC20 token address of the token you want to receive.","The ERC20 token address of the token you want to sell.","The maximum acceptable slippage percentage.","tokenIn","tokenOut"]},{"l":"Optional Parameters","p":["\"uniswap-v2,sushiswap\"","\"uniswap-v3\"","\"YOUR_0X_API_KEY\"","\"YOUR_1INCH_API_KEY\"","18","6","A comma-separated list of protocols to exclude.","A comma-separated list of protocols to include.","Example","excludeProtocols","fromTokenDecimals","includeProtocols","Notes","oneInchApiKey","Parameter","The API key for 0x to fetch a quote.","The API key for 1inch to fetch a quote.","The decimal places for the tokenIn token.","The decimal places for the tokenOut token.","toTokenDecimals","zeroExApiKey"]},{"i":"premium-optional-parameters","l":"Premium (optional) Parameters","p":["Parameter","Notes","Example","odosReferralCode","Referral code for Odos. Obtain a code here","\"12345678\"","partnerReferralWallet","Wallet address for partner referral (premium only).","\"0x92977D2552f455Bb9A3457AEbfCb78f1256Dd2e5\"","partnerReferralFeeBps","Fee in basis points for partner referral (premium only).","50"]},{"i":"example","l":"Example:"},{"l":"Request"},{"l":"Response","p":["Calling the /swap endpoint with your desired parameters automatically standardizes and passes your parameters to the desired DEX aggregator and returns a response based on values from their native API.","to is the aggregator router from is the wallet that the transaction is being signed from value is the base unit amount in Ether that is being transacted (specifically for Eth -> Token swaps)"]}],[{"i":"get-aggregatorschainid","l":"GET /aggregators/[chainId]","p":["/aggregators/[chainId] requests can be called from any Quicknode endpoint enabled to use the API, regardless which chain/endpoint you have configured with the Meta-Aggregator Swap API. No json parameters are needed for this call.","Knowing which aggregators are available for each chain not only shows you all the supported Aggregators for each chain we support, it also allows you filter, or optionally only include specific aggregators for both /quote and /swap requests via excludeAggregators, or includeAggregators"]},{"l":"Usage"},{"l":"includeAggregators","p":["When includeAggregators is used with /quote, it will only return responses for that particular protocol. For example, if you set includeAggregators: Paraswap in a /quote request, the API will only query Paraswap.."]},{"l":"excludeAggregators","p":["When excludeAggregators is used with /quote, it will return responses for every aggregator other than what was specified. For example, if you set excludeAggregators: Parswap, OpenOcean in a /quote request, it will filter out Paraswap and OpenOcean from being queried."]},{"i":"example","l":"Example:"},{"l":"Request"},{"l":"Response"}],[{"i":"get-sourceschainid","l":"GET /sources[chainId]","p":["/sources/[chainId] requests can be called from any Quicknode endpoint enabled to use the API, regardless which chain/endpoint you have configured with the Meta-Aggregator Swap API. No json parameters are needed for this call.","Knowing which sources are available for each chain not only shows you all the available DEX's for all the available Aggregators we support, it also allows you filter, or optionally only include sources for both /quote and /swap requests via excludeSources, or includeSources"]},{"l":"Usage"},{"l":"includeSources","p":["When includeSources is used with /quote or/swap, it will only return responses for that particular protocol. For example, if you set includeSources: uniswap-v3 in a /quote or /swap request, the connected aggregators will only query Uniswap V3 pools for use in the swap."]},{"l":"excludeSources","p":["When excludeSources is used with /quote or/swap, it will return responses for every protocol but that pool type. For example, if you set excludeSources: uniswap-v3 in a /quote or /swap request, it will filter out Uniswap V3 pools from the swap routes/calldata. Note that this doesn't eliminate Uniswap V2 forks, such as PancakeSwap V3, Sushiswap V3, or so on. Those pools will each have to be excluded as well."]},{"i":"example","l":"Example:"},{"l":"Request"},{"l":"Response"}]]