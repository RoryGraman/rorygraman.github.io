[[{"l":"Getting Started","p":["The Meta-aggregator Swap API is an available as a Quicknode add-on in their Marketplace. These documents serve as a guide to get your endpoints configured properly to make the integration as seamless as possible","Overview","Endpoints","/quote","/swap","/aggregators","/sources"]}],[{"i":"post-quote","l":"POST /quote","p":["/quote requests should be called via the Quicknode endpoint you used to configure on each chain. Parameters are passed in via JSON."]},{"l":"Required Parameters","p":["\"0x92977D2552f455Bb9A3457AEbfCb78f1256Dd2e5\"","\"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"","\"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\"","\"1000000000000000000\"","1","amountIn","chainId","Example","Notes","Parameter","recipient","slippage","The address that will receive the swapped tokens.","The amount of tokenIn tokens to swap (in base units).","The chain ID of the blockchain network.","The ERC20 token address of the token you want to receive.","The ERC20 token address of the token you want to sell.","The maximum acceptable slippage percentage.","tokenIn","tokenOut"]},{"l":"Optional Parameters","p":["\"1inch\"","\"paraswap\"","\"uniswap-v2,sushiswap\"","\"uniswap-v3\"","\"YOUR_0X_API_KEY\"","\"YOUR_1INCH_API_KEY\"","18","6","A comma-separated list of protocols to exclude.","A comma-separated list of protocols to include.","Example","Exclude specific aggregators.","excludeAggregator","excludeProtocols","fromTokenDecimals","Include specific aggregators.","includeAggregator","includeProtocols","Notes","oneInchApiKey","Parameter","The API key for 0x to fetch a quote.","The API key for 1inch to fetch a quote.","The decimal places for the tokenIn token.","The decimal places for the tokenOut token.","toTokenDecimals","zeroExApiKey"]},{"i":"premium-optional-parameters","l":"Premium (optional) Parameters","p":["Parameter","Notes","Example","odosReferralCode","Referral code for Odos. Obtain a code here","\"12345678\"","partnerReferralWallet","Wallet address for partner referral (premium only).","\"0x92977D2552f455Bb9A3457AEbfCb78f1256Dd2e5\"","partnerReferralFeeBps","Fee in basis points for partner referral (premium only).","50"]},{"i":"example","l":"Example:"},{"l":"Request"},{"l":"Response","p":["Calling the /quote endpoint with your desired parameters automatically standardizes and passes your parameters to several DEX aggregators and returns a response based on values from their native API. The body.best collection populates based on which aggregator provides the most favorable value on the trade. Additionally body.best.aggregator can then be used in the /swap endpoint to generate calldata","Additionally, you can filter out requests from specific aggregators via the excludeAggregator parameter, or specifically only include aggregators via includeAggregators"]}],[{"i":"post-swapaggregator","l":"POST /swap/[aggregator]","p":["/swap/[aggregator] requests should be called via the Quicknode endpoint you used to configure on each chain. Parameters are passed in via JSON."]},{"l":"Required Parameters","p":["\"0x92977D2552f455Bb9A3457AEbfCb78f1256Dd2e5\"","\"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"","\"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\"","\"1000000000000000000\"","1","amountIn","chainId","Example","Notes","Parameter","recipient","slippage","The address that will receive the swapped tokens.","The amount of tokenIn tokens to swap (in base units).","The chain ID of the blockchain network.","The ERC20 token address of the token you want to receive.","The ERC20 token address of the token you want to sell.","The maximum acceptable slippage percentage.","tokenIn","tokenOut"]},{"l":"Optional Parameters","p":["\"uniswap-v2,sushiswap\"","\"uniswap-v3\"","\"YOUR_0X_API_KEY\"","\"YOUR_1INCH_API_KEY\"","18","6","A comma-separated list of protocols to exclude.","A comma-separated list of protocols to include.","Example","excludeProtocols","fromTokenDecimals","includeProtocols","Notes","oneInchApiKey","Parameter","The API key for 0x to fetch a quote.","The API key for 1inch to fetch a quote.","The decimal places for the tokenIn token.","The decimal places for the tokenOut token.","toTokenDecimals","zeroExApiKey"]},{"i":"premium-optional-parameters","l":"Premium (optional) Parameters","p":["Parameter","Notes","Example","odosReferralCode","Referral code for Odos. Obtain a code here","\"12345678\"","partnerReferralWallet","Wallet address for partner referral (premium only).","\"0x92977D2552f455Bb9A3457AEbfCb78f1256Dd2e5\"","partnerReferralFeeBps","Fee in basis points for partner referral (premium only).","50"]},{"i":"example","l":"Example:"},{"l":"Request"},{"l":"Response","p":["Calling the /swap endpoint with your desired parameters automatically standardizes and passes your parameters to the desired DEX aggregator and returns a response based on values from their native API.","to is the aggregator router from is the wallet that the transaction is being signed from value is the base unit amount in Ether that is being transacted (specifically for Eth -> Token swaps)"]}],[{"i":"get-aggregatorschainid","l":"GET /aggregators/[chainId]","p":["/aggregators/[chainId] requests can be called from any Quicknode endpoint enabled to use the API, regardless which chain/endpoint you have configured with the Meta-Aggregator Swap API. No json parameters are needed for this call.","Knowing which aggregators are available for each chain not only shows you all the supported Aggregators for each chain we support, it also allows you filter, or optionally only include specific aggregators for both /quote and /swap requests via excludeAggregators, or includeAggregators"]},{"l":"Usage"},{"l":"includeAggregators","p":["When includeAggregators is used with /quote, it will only return responses for that particular protocol. For example, if you set includeAggregators: Paraswap in a /quote request, the API will only query Paraswap.."]},{"l":"excludeAggregators","p":["When excludeAggregators is used with /quote, it will return responses for every aggregator other than what was specified. For example, if you set excludeAggregators: Parswap, OpenOcean in a /quote request, it will filter out Paraswap and OpenOcean from being queried."]},{"i":"example","l":"Example:"},{"l":"Request"},{"l":"Response"}],[{"i":"get-sourceschainid","l":"GET /sources[chainId]","p":["/sources/[chainId] requests can be called from any Quicknode endpoint enabled to use the API, regardless which chain/endpoint you have configured with the Meta-Aggregator Swap API. No json parameters are needed for this call.","Knowing which sources are available for each chain not only shows you all the available DEX's for all the available Aggregators we support, it also allows you filter, or optionally only include sources for both /quote and /swap requests via excludeSources, or includeSources"]},{"l":"Usage"},{"l":"includeSources","p":["When includeSources is used with /quote or/swap, it will only return responses for that particular protocol. For example, if you set includeSources: uniswap-v3 in a /quote or /swap request, the connected aggregators will only query Uniswap V3 pools for use in the swap."]},{"l":"excludeSources","p":["When excludeSources is used with /quote or/swap, it will return responses for every protocol but that pool type. For example, if you set excludeSources: uniswap-v3 in a /quote or /swap request, it will filter out Uniswap V3 pools from the swap routes/calldata. Note that this doesn't eliminate Uniswap V2 forks, such as PancakeSwap V3, Sushiswap V3, or so on. Those pools will each have to be excluded as well."]},{"i":"example","l":"Example:"},{"l":"Request"},{"l":"Response"}]]